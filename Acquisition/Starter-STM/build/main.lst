ARM GAS  /tmp/ccFX5Ng8.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.lsm6_read,"ax",%progbits
  19              		.align	1
  20              		.global	lsm6_read
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	lsm6_read:
  26              	.LVL0:
  27              	.LFB43:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "gpio.h"
  22:Core/Src/main.c **** #include "spi.h"
  23:Core/Src/main.c **** #include "stm32f0xx_hal_gpio.h"
  24:Core/Src/main.c **** #include "stm32f0xx_hal_spi.h"
  25:Core/Src/main.c **** #include "usart.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include <stdio.h>
  30:Core/Src/main.c **** #include <string.h>
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccFX5Ng8.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** // Accelerometer and gyroscope control registers
  43:Core/Src/main.c **** #define LSM6DSL_CTRL1_XL 0x10
  44:Core/Src/main.c **** #define LSM6DSL_CTRL2_G 0x11
  45:Core/Src/main.c **** #define LSM6DSL_CTRL3_C 0x12
  46:Core/Src/main.c **** #define LSM6DSL_CTRL4_C 0x13
  47:Core/Src/main.c **** #define LSM6DSL_CTRL5_C 0x14
  48:Core/Src/main.c **** #define LSM6DSL_CTRL6_C 0x15
  49:Core/Src/main.c **** #define LSM6DSL_CTRL7_G 0x16
  50:Core/Src/main.c **** #define LSM6DSL_CTRL8_XL 0x17
  51:Core/Src/main.c **** #define LSM6DSL_CTRL9_XL 0x18
  52:Core/Src/main.c **** #define LSM6DSL_CTRL10_C 0x19
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** // Sensitivity conversions
  55:Core/Src/main.c **** // Angular Velocity (DPS) = Raw data * Sensitivity
  56:Core/Src/main.c **** // Ex:
  57:Core/Src/main.c **** // full scale range of 125, each raw unit corresponds to 4.375 DPS
  58:Core/Src/main.c **** // if we read 15, Angular Velocity = 15 * 4.375 = 65.625 DPS
  59:Core/Src/main.c **** #define LSM6DSL_GYRO_SENSITIVITY_FS_125DPS 4.375f
  60:Core/Src/main.c **** #define LSM6DSL_GYRO_SENSITIVITY_FS_250DPS 8.750f
  61:Core/Src/main.c **** #define LSM6DSL_GYRO_SENSITIVITY_FS_500DPS 17.500f
  62:Core/Src/main.c **** #define LSM6DSL_GYRO_SENSITIVITY_FS_1000DPS 35.000f
  63:Core/Src/main.c **** #define LSM6DSL_GYRO_SENSITIVITY_FS_2000DPS 70.000f
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** // Gyroscope output registers
  66:Core/Src/main.c **** #define LSM6DSL_OUTX_L_G 0x22
  67:Core/Src/main.c **** #define LSM6DSL_OUTX_H_G 0x23
  68:Core/Src/main.c **** #define LSM6DSL_OUTY_L_G 0x24
  69:Core/Src/main.c **** #define LSM6DSL_OUTY_H_G 0x25
  70:Core/Src/main.c **** #define LSM6DSL_OUTZ_L_G 0x26
  71:Core/Src/main.c **** #define LSM6DSL_OUTZ_H_G 0x27
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END PD */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  76:Core/Src/main.c **** /* USER CODE BEGIN PM */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* USER CODE END PM */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE BEGIN PV */
  83:Core/Src/main.c **** // Full Scale Range configuration paramaters
  84:Core/Src/main.c **** // sets the degrees per second range we can acquire
  85:Core/Src/main.c **** typedef enum {
  86:Core/Src/main.c ****   LSM6DSL_250dps = 0,
  87:Core/Src/main.c ****   LSM6DSL_125dps = 1,
  88:Core/Src/main.c ****   LSM6DSL_500dps = 2,
ARM GAS  /tmp/ccFX5Ng8.s 			page 3


  89:Core/Src/main.c ****   LSM6DSL_1000dps = 4,
  90:Core/Src/main.c ****   LSM6DSL_2000dps = 6
  91:Core/Src/main.c **** } lsm6dsl_fs_g_t;
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** // Output Data Rate configuration paramaters
  94:Core/Src/main.c **** // frequency at which the gyroscope outputs data (Hz)
  95:Core/Src/main.c **** typedef enum {
  96:Core/Src/main.c ****   LSM6DSL_GY_ODR_OFF = 0,
  97:Core/Src/main.c ****   LSM6DSL_GY_ODR_12Hz5 = 1,
  98:Core/Src/main.c ****   LSM6DSL_GY_ODR_26Hz = 2,
  99:Core/Src/main.c ****   LSM6DSL_GY_ODR_52Hz = 3,
 100:Core/Src/main.c ****   LSM6DSL_GY_ODR_104Hz = 4,
 101:Core/Src/main.c ****   LSM6DSL_GY_ODR_208Hz = 5,
 102:Core/Src/main.c ****   LSM6DSL_GY_ODR_416Hz = 6,
 103:Core/Src/main.c ****   LSM6DSL_GY_ODR_833Hz = 7,
 104:Core/Src/main.c ****   LSM6DSL_GY_ODR_1k66Hz = 8,
 105:Core/Src/main.c ****   LSM6DSL_GY_ODR_3k33Hz = 9,
 106:Core/Src/main.c ****   LSM6DSL_GY_ODR_6k66Hz = 10
 107:Core/Src/main.c **** } lsm6dsl_odr_g_t;
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** // Packed Raw Data
 110:Core/Src/main.c **** typedef union {
 111:Core/Src/main.c ****   uint8_t bytes[6];
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   struct __attribute__((packed)) // ensure no padding
 114:Core/Src/main.c ****   {
 115:Core/Src/main.c ****     int16_t x;
 116:Core/Src/main.c ****     int16_t y;
 117:Core/Src/main.c ****     int16_t z;
 118:Core/Src/main.c ****   };
 119:Core/Src/main.c **** } LSM6DSL_AxesRaw_t;
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** // 3 axis data (post processing)
 122:Core/Src/main.c **** typedef struct {
 123:Core/Src/main.c ****   int32_t x;
 124:Core/Src/main.c ****   int32_t y;
 125:Core/Src/main.c ****   int32_t z;
 126:Core/Src/main.c **** } LSM6DSL_Axes_t;
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /* USER CODE END PV */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 131:Core/Src/main.c **** void SystemClock_Config(void);
 132:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 133:Core/Src/main.c **** void lsm6_read(uint8_t address, uint8_t *rxData);
 134:Core/Src/main.c **** void lsm6_write(uint8_t address, uint8_t *txData);
 135:Core/Src/main.c **** void lsm6_init();
 136:Core/Src/main.c **** void lsm6_readGyro(LSM6DSL_AxesRaw_t *axes);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** /* USER CODE END PFP */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 141:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 142:Core/Src/main.c **** void lsm6_read(uint8_t address, uint8_t *rxData) {
  28              		.loc 1 142 50 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccFX5Ng8.s 			page 4


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 142 50 is_stmt 0 view .LVU1
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 85B0     		sub	sp, sp, #20
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 40
  44 0004 0C00     		movs	r4, r1
 143:Core/Src/main.c ****   uint8_t DataSize = 2;
  45              		.loc 1 143 3 is_stmt 1 view .LVU2
  46              	.LVL1:
 144:Core/Src/main.c ****   uint8_t TxData[] = {address | 0x80, 0};
  47              		.loc 1 144 3 view .LVU3
  48              		.loc 1 144 11 is_stmt 0 view .LVU4
  49 0006 03AE     		add	r6, sp, #12
  50 0008 8023     		movs	r3, #128
  51 000a 5B42     		rsbs	r3, r3, #0
  52 000c 0343     		orrs	r3, r0
  53 000e 3370     		strb	r3, [r6]
  54 0010 0023     		movs	r3, #0
  55 0012 7370     		strb	r3, [r6, #1]
 145:Core/Src/main.c ****   uint8_t RxData[] = {0, 0};
  56              		.loc 1 145 3 is_stmt 1 view .LVU5
  57              		.loc 1 145 11 is_stmt 0 view .LVU6
  58 0014 02AD     		add	r5, sp, #8
  59 0016 2B80     		strh	r3, [r5]
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
  60              		.loc 1 147 3 is_stmt 1 view .LVU7
  61 0018 9027     		movs	r7, #144
  62 001a FF05     		lsls	r7, r7, #23
  63 001c 0022     		movs	r2, #0
  64 001e 0421     		movs	r1, #4
  65              	.LVL2:
  66              		.loc 1 147 3 is_stmt 0 view .LVU8
  67 0020 3800     		movs	r0, r7
  68              	.LVL3:
  69              		.loc 1 147 3 view .LVU9
  70 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
  71              	.LVL4:
 148:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, TxData, RxData, DataSize, 10000);
  72              		.loc 1 148 3 is_stmt 1 view .LVU10
  73 0026 0848     		ldr	r0, .L2
  74 0028 084B     		ldr	r3, .L2+4
  75 002a 0093     		str	r3, [sp]
  76 002c 0223     		movs	r3, #2
  77 002e 2A00     		movs	r2, r5
  78 0030 3100     		movs	r1, r6
  79 0032 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
  80              	.LVL5:
 149:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
ARM GAS  /tmp/ccFX5Ng8.s 			page 5


  81              		.loc 1 149 3 view .LVU11
  82 0036 0122     		movs	r2, #1
  83 0038 0421     		movs	r1, #4
  84 003a 3800     		movs	r0, r7
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL6:
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   *rxData = RxData[1];
  87              		.loc 1 151 3 view .LVU12
  88              		.loc 1 151 19 is_stmt 0 view .LVU13
  89 0040 6B78     		ldrb	r3, [r5, #1]
  90              		.loc 1 151 11 view .LVU14
  91 0042 2370     		strb	r3, [r4]
 152:Core/Src/main.c **** }
  92              		.loc 1 152 1 view .LVU15
  93 0044 05B0     		add	sp, sp, #20
  94              		@ sp needed
  95              	.LVL7:
  96              		.loc 1 152 1 view .LVU16
  97 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
  98              	.L3:
  99              		.align	2
 100              	.L2:
 101 0048 00000000 		.word	hspi1
 102 004c 10270000 		.word	10000
 103              		.cfi_endproc
 104              	.LFE43:
 106              		.section	.text.lsm6_write,"ax",%progbits
 107              		.align	1
 108              		.global	lsm6_write
 109              		.syntax unified
 110              		.code	16
 111              		.thumb_func
 113              	lsm6_write:
 114              	.LVL8:
 115              	.LFB44:
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** void lsm6_write(uint8_t address, uint8_t *txData) {
 116              		.loc 1 154 51 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 8
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		.loc 1 154 51 is_stmt 0 view .LVU18
 121 0000 30B5     		push	{r4, r5, lr}
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 12
 124              		.cfi_offset 4, -12
 125              		.cfi_offset 5, -8
 126              		.cfi_offset 14, -4
 127 0002 83B0     		sub	sp, sp, #12
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 24
 155:Core/Src/main.c ****   uint8_t DataSize = 2;
 130              		.loc 1 155 3 is_stmt 1 view .LVU19
 131              	.LVL9:
 156:Core/Src/main.c ****   uint8_t TxData[] = {address, *txData};
 132              		.loc 1 156 3 view .LVU20
ARM GAS  /tmp/ccFX5Ng8.s 			page 6


 133              		.loc 1 156 11 is_stmt 0 view .LVU21
 134 0004 01AC     		add	r4, sp, #4
 135 0006 2070     		strb	r0, [r4]
 136              		.loc 1 156 32 view .LVU22
 137 0008 0B78     		ldrb	r3, [r1]
 138              		.loc 1 156 11 view .LVU23
 139 000a 6370     		strb	r3, [r4, #1]
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 140              		.loc 1 158 3 is_stmt 1 view .LVU24
 141 000c 9025     		movs	r5, #144
 142 000e ED05     		lsls	r5, r5, #23
 143 0010 0022     		movs	r2, #0
 144 0012 0421     		movs	r1, #4
 145              	.LVL10:
 146              		.loc 1 158 3 is_stmt 0 view .LVU25
 147 0014 2800     		movs	r0, r5
 148              	.LVL11:
 149              		.loc 1 158 3 view .LVU26
 150 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 151              	.LVL12:
 159:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, TxData, DataSize, 10000);
 152              		.loc 1 159 3 is_stmt 1 view .LVU27
 153 001a 0648     		ldr	r0, .L5
 154 001c 064B     		ldr	r3, .L5+4
 155 001e 0222     		movs	r2, #2
 156 0020 2100     		movs	r1, r4
 157 0022 FFF7FEFF 		bl	HAL_SPI_Transmit
 158              	.LVL13:
 160:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 159              		.loc 1 160 3 view .LVU28
 160 0026 0122     		movs	r2, #1
 161 0028 0421     		movs	r1, #4
 162 002a 2800     		movs	r0, r5
 163 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 164              	.LVL14:
 161:Core/Src/main.c **** }
 165              		.loc 1 161 1 is_stmt 0 view .LVU29
 166 0030 03B0     		add	sp, sp, #12
 167              		@ sp needed
 168 0032 30BD     		pop	{r4, r5, pc}
 169              	.L6:
 170              		.align	2
 171              	.L5:
 172 0034 00000000 		.word	hspi1
 173 0038 10270000 		.word	10000
 174              		.cfi_endproc
 175              	.LFE44:
 177              		.section	.text.lsm6_init,"ax",%progbits
 178              		.align	1
 179              		.global	lsm6_init
 180              		.syntax unified
 181              		.code	16
 182              		.thumb_func
 184              	lsm6_init:
 185              	.LFB45:
 162:Core/Src/main.c **** 
ARM GAS  /tmp/ccFX5Ng8.s 			page 7


 163:Core/Src/main.c **** void lsm6_init() {
 186              		.loc 1 163 18 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 8
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 10B5     		push	{r4, lr}
 191              	.LCFI4:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 4, -8
 194              		.cfi_offset 14, -4
 195 0002 82B0     		sub	sp, sp, #8
 196              	.LCFI5:
 197              		.cfi_def_cfa_offset 16
 164:Core/Src/main.c ****   uint8_t data = 0;
 198              		.loc 1 164 3 view .LVU31
 199              		.loc 1 164 11 is_stmt 0 view .LVU32
 200 0004 6B46     		mov	r3, sp
 201 0006 DC1D     		adds	r4, r3, #7
 202 0008 0023     		movs	r3, #0
 203 000a 2370     		strb	r3, [r4]
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   // Important registers: 
 167:Core/Src/main.c ****   // CTRL2_G (11h)
 168:Core/Src/main.c ****   // ODR_G[7:4] Output Data Rate
 169:Core/Src/main.c ****   // FS_G[3:2] Full-Scale Selection
 170:Core/Src/main.c ****   // FS_125[1:1] Full scale == 125 dps
 171:Core/Src/main.c ****   // NULL [0:0] set zero
 172:Core/Src/main.c ****   data = (0b0011<< 4) | (0b11<< 2 | 0b00);
 204              		.loc 1 172 3 is_stmt 1 view .LVU33
 205              		.loc 1 172 8 is_stmt 0 view .LVU34
 206 000c 3C33     		adds	r3, r3, #60
 207 000e 2370     		strb	r3, [r4]
 173:Core/Src/main.c ****   lsm6_write((0x11), &data);
 208              		.loc 1 173 3 is_stmt 1 view .LVU35
 209 0010 2100     		movs	r1, r4
 210 0012 1120     		movs	r0, #17
 211 0014 FFF7FEFF 		bl	lsm6_write
 212              	.LVL15:
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   // CTRL7_G (16h)
 177:Core/Src/main.c ****   // [7:7]  set to 0 to enable high performance mode
 178:Core/Src/main.c ****   // [6:6]  set to 1 to enable high-pass filter
 179:Core/Src/main.c ****   // [5:4]  high-pass filter cutoff frequency
 180:Core/Src/main.c ****   // [3:3]  digital hp filter reset  (0: disabled)
 181:Core/Src/main.c ****   // [2:2]  rounding function enable (0: disabled)
 182:Core/Src/main.c ****   // [1:0]  leave 0
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   // filter table:
 185:Core/Src/main.c ****   // 00 - 0.0081 hz
 186:Core/Src/main.c ****   // 01 - 0.0324 hz
 187:Core/Src/main.c ****   // 10 - 2.07 hz
 188:Core/Src/main.c ****   // 11 - 16.32 hz
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   data = (0b0 << 7) | (0b1 << 6) | (0b11 << 4) | 0b0000;
 213              		.loc 1 190 3 view .LVU36
 214              		.loc 1 190 8 is_stmt 0 view .LVU37
ARM GAS  /tmp/ccFX5Ng8.s 			page 8


 215 0018 7023     		movs	r3, #112
 216 001a 2370     		strb	r3, [r4]
 191:Core/Src/main.c ****   lsm6_write((0x16),&data);
 217              		.loc 1 191 3 is_stmt 1 view .LVU38
 218 001c 2100     		movs	r1, r4
 219 001e 1620     		movs	r0, #22
 220 0020 FFF7FEFF 		bl	lsm6_write
 221              	.LVL16:
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** }
 222              		.loc 1 193 1 is_stmt 0 view .LVU39
 223 0024 02B0     		add	sp, sp, #8
 224              		@ sp needed
 225 0026 10BD     		pop	{r4, pc}
 226              		.cfi_endproc
 227              	.LFE45:
 229              		.section	.text.lsm6_readGyro_RAW,"ax",%progbits
 230              		.align	1
 231              		.global	lsm6_readGyro_RAW
 232              		.syntax unified
 233              		.code	16
 234              		.thumb_func
 236              	lsm6_readGyro_RAW:
 237              	.LVL17:
 238              	.LFB46:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** void lsm6_readGyro_RAW(LSM6DSL_AxesRaw_t *axes) {
 239              		.loc 1 195 49 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 16
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		.loc 1 195 49 is_stmt 0 view .LVU41
 244 0000 70B5     		push	{r4, r5, r6, lr}
 245              	.LCFI6:
 246              		.cfi_def_cfa_offset 16
 247              		.cfi_offset 4, -16
 248              		.cfi_offset 5, -12
 249              		.cfi_offset 6, -8
 250              		.cfi_offset 14, -4
 251 0002 86B0     		sub	sp, sp, #24
 252              	.LCFI7:
 253              		.cfi_def_cfa_offset 40
 254 0004 0500     		movs	r5, r0
 196:Core/Src/main.c ****   uint8_t addr[] = {0x22 | 0x80, 0, 0x23 | 0x80, 0, 0x24 | 0x80, 0,
 255              		.loc 1 196 3 is_stmt 1 view .LVU42
 256              		.loc 1 196 11 is_stmt 0 view .LVU43
 257 0006 03AC     		add	r4, sp, #12
 258 0008 0C4B     		ldr	r3, .L9
 259 000a 2200     		movs	r2, r4
 260 000c 43CB     		ldmia	r3!, {r0, r1, r6}
 261 000e 43C2     		stmia	r2!, {r0, r1, r6}
 262              	.LVL18:
 197:Core/Src/main.c ****                     0x25 | 0x80, 0, 0x26 | 0x80, 0, 0x27 | 0x80, 0};
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   // gyro is addr 0x22 - 0x27
 200:Core/Src/main.c ****   // we want to continously read addr 0x22 - 0x27
 201:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
ARM GAS  /tmp/ccFX5Ng8.s 			page 9


 263              		.loc 1 201 3 is_stmt 1 view .LVU44
 264 0010 9026     		movs	r6, #144
 265 0012 F605     		lsls	r6, r6, #23
 266 0014 0022     		movs	r2, #0
 267 0016 0421     		movs	r1, #4
 268 0018 3000     		movs	r0, r6
 269 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 270              	.LVL19:
 202:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, addr, (uint8_t*)axes, 12, 10000);
 271              		.loc 1 202 3 view .LVU45
 272 001e 0848     		ldr	r0, .L9+4
 273 0020 084B     		ldr	r3, .L9+8
 274 0022 0093     		str	r3, [sp]
 275 0024 0C23     		movs	r3, #12
 276 0026 2A00     		movs	r2, r5
 277 0028 2100     		movs	r1, r4
 278 002a FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 279              	.LVL20:
 203:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 280              		.loc 1 203 3 view .LVU46
 281 002e 0122     		movs	r2, #1
 282 0030 0421     		movs	r1, #4
 283 0032 3000     		movs	r0, r6
 284 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 285              	.LVL21:
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** }
 286              		.loc 1 205 1 is_stmt 0 view .LVU47
 287 0038 06B0     		add	sp, sp, #24
 288              		@ sp needed
 289              	.LVL22:
 290              		.loc 1 205 1 view .LVU48
 291 003a 70BD     		pop	{r4, r5, r6, pc}
 292              	.L10:
 293              		.align	2
 294              	.L9:
 295 003c 00000000 		.word	.LANCHOR0
 296 0040 00000000 		.word	hspi1
 297 0044 10270000 		.word	10000
 298              		.cfi_endproc
 299              	.LFE46:
 301              		.section	.text.Error_Handler,"ax",%progbits
 302              		.align	1
 303              		.global	Error_Handler
 304              		.syntax unified
 305              		.code	16
 306              		.thumb_func
 308              	Error_Handler:
 309              	.LFB49:
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /* USER CODE END 0 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** /**
 210:Core/Src/main.c ****  * @brief  The application entry point.
 211:Core/Src/main.c ****  * @retval int
 212:Core/Src/main.c ****  */
 213:Core/Src/main.c **** int main(void) {
ARM GAS  /tmp/ccFX5Ng8.s 			page 10


 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END 1 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick.
 222:Core/Src/main.c ****    */
 223:Core/Src/main.c ****   HAL_Init();
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END Init */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* Configure the system clock */
 230:Core/Src/main.c ****   SystemClock_Config();
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END SysInit */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* Initialize all configured peripherals */
 237:Core/Src/main.c ****   MX_GPIO_Init();
 238:Core/Src/main.c ****   MX_USART1_UART_Init();
 239:Core/Src/main.c ****   MX_SPI1_Init();
 240:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE END 2 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* Infinite loop */
 245:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   // SPI serial message
 248:Core/Src/main.c ****   uint8_t UARTmsg[50];
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   // spi package
 251:Core/Src/main.c ****   uint8_t addr;
 252:Core/Src/main.c ****   uint8_t txData;
 253:Core/Src/main.c ****   uint8_t rxData;
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   HAL_StatusTypeDef status;
 256:Core/Src/main.c ****   lsm6_init();
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   LSM6DSL_AxesRaw_t gyro_raw;
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   while (1) {
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****     // read WHO_AM_I
 263:Core/Src/main.c ****     // addr = 0x0F;
 264:Core/Src/main.c ****     // lsm6_read(addr, &rxData);
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****     lsm6_readGyro_RAW(&gyro_raw);
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****     // snprintf((char *)SPImsg, sizeof(SPImsg), "WHO_AM_I: 0x%x\n\r", rxData);
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****     snprintf((char *)UARTmsg, sizeof(UARTmsg), "%i %i %i\n\r", gyro_raw.x, gyro_raw.y, gyro_raw.z);
ARM GAS  /tmp/ccFX5Ng8.s 			page 11


 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t *)UARTmsg, strlen((char *)UARTmsg), 200);
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_3);
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****     HAL_Delay(100);
 277:Core/Src/main.c ****     /* USER CODE END WHILE */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 280:Core/Src/main.c ****   }
 281:Core/Src/main.c ****   /* USER CODE END 3 */
 282:Core/Src/main.c **** }
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
 285:Core/Src/main.c ****  * @brief System Clock Configuration
 286:Core/Src/main.c ****  * @retval None
 287:Core/Src/main.c ****  */
 288:Core/Src/main.c **** void SystemClock_Config(void) {
 289:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 290:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 291:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 294:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 295:Core/Src/main.c ****    */
 296:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 298:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 300:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 301:Core/Src/main.c ****     Error_Handler();
 302:Core/Src/main.c ****   }
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 305:Core/Src/main.c ****    */
 306:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType =
 307:Core/Src/main.c ****       RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 308:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 309:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 310:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 313:Core/Src/main.c ****     Error_Handler();
 314:Core/Src/main.c ****   }
 315:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 316:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 317:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 318:Core/Src/main.c ****     Error_Handler();
 319:Core/Src/main.c ****   }
 320:Core/Src/main.c **** }
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** /* USER CODE END 4 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** /**
 327:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
ARM GAS  /tmp/ccFX5Ng8.s 			page 12


 328:Core/Src/main.c ****  * @retval None
 329:Core/Src/main.c ****  */
 330:Core/Src/main.c **** void Error_Handler(void) {
 310              		.loc 1 330 26 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ Volatile: function does not return.
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 331:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 332:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 333:Core/Src/main.c ****   __disable_irq();
 316              		.loc 1 333 3 view .LVU50
 317              	.LBB4:
 318              	.LBI4:
 319              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  /tmp/ccFX5Ng8.s 			page 13


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  /tmp/ccFX5Ng8.s 			page 14


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 320              		.loc 2 140 27 view .LVU51
 321              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 322              		.loc 2 142 3 view .LVU52
 323              		.syntax divided
 324              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 325 0000 72B6     		cpsid i
 326              	@ 0 "" 2
 327              		.thumb
 328              		.syntax unified
 329              	.L12:
 330              	.LBE5:
 331              	.LBE4:
 334:Core/Src/main.c ****   while (1) {
ARM GAS  /tmp/ccFX5Ng8.s 			page 15


 332              		.loc 1 334 3 view .LVU53
 335:Core/Src/main.c ****   }
 333              		.loc 1 335 3 view .LVU54
 334:Core/Src/main.c ****   while (1) {
 334              		.loc 1 334 9 view .LVU55
 335 0002 FEE7     		b	.L12
 336              		.cfi_endproc
 337              	.LFE49:
 339              		.section	.text.SystemClock_Config,"ax",%progbits
 340              		.align	1
 341              		.global	SystemClock_Config
 342              		.syntax unified
 343              		.code	16
 344              		.thumb_func
 346              	SystemClock_Config:
 347              	.LFB48:
 288:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 348              		.loc 1 288 31 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 96
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 10B5     		push	{r4, lr}
 353              	.LCFI8:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 4, -8
 356              		.cfi_offset 14, -4
 357 0002 98B0     		sub	sp, sp, #96
 358              	.LCFI9:
 359              		.cfi_def_cfa_offset 104
 289:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 360              		.loc 1 289 3 view .LVU57
 289:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 361              		.loc 1 289 22 is_stmt 0 view .LVU58
 362 0004 0BAC     		add	r4, sp, #44
 363 0006 3422     		movs	r2, #52
 364 0008 0021     		movs	r1, #0
 365 000a 2000     		movs	r0, r4
 366 000c FFF7FEFF 		bl	memset
 367              	.LVL23:
 290:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 368              		.loc 1 290 3 is_stmt 1 view .LVU59
 290:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 369              		.loc 1 290 22 is_stmt 0 view .LVU60
 370 0010 1022     		movs	r2, #16
 371 0012 0021     		movs	r1, #0
 372 0014 07A8     		add	r0, sp, #28
 373 0016 FFF7FEFF 		bl	memset
 374              	.LVL24:
 291:Core/Src/main.c **** 
 375              		.loc 1 291 3 is_stmt 1 view .LVU61
 291:Core/Src/main.c **** 
 376              		.loc 1 291 28 is_stmt 0 view .LVU62
 377 001a 1822     		movs	r2, #24
 378 001c 0021     		movs	r1, #0
 379 001e 01A8     		add	r0, sp, #4
 380 0020 FFF7FEFF 		bl	memset
 381              	.LVL25:
ARM GAS  /tmp/ccFX5Ng8.s 			page 16


 296:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 382              		.loc 1 296 3 is_stmt 1 view .LVU63
 296:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 383              		.loc 1 296 36 is_stmt 0 view .LVU64
 384 0024 0223     		movs	r3, #2
 385 0026 0B93     		str	r3, [sp, #44]
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 386              		.loc 1 297 3 is_stmt 1 view .LVU65
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 387              		.loc 1 297 30 is_stmt 0 view .LVU66
 388 0028 013B     		subs	r3, r3, #1
 389 002a 0E93     		str	r3, [sp, #56]
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 390              		.loc 1 298 3 is_stmt 1 view .LVU67
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 391              		.loc 1 298 41 is_stmt 0 view .LVU68
 392 002c 0F33     		adds	r3, r3, #15
 393 002e 0F93     		str	r3, [sp, #60]
 299:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 394              		.loc 1 299 3 is_stmt 1 view .LVU69
 300:Core/Src/main.c ****     Error_Handler();
 395              		.loc 1 300 3 view .LVU70
 300:Core/Src/main.c ****     Error_Handler();
 396              		.loc 1 300 7 is_stmt 0 view .LVU71
 397 0030 2000     		movs	r0, r4
 398 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 399              	.LVL26:
 300:Core/Src/main.c ****     Error_Handler();
 400              		.loc 1 300 6 discriminator 1 view .LVU72
 401 0036 0028     		cmp	r0, #0
 402 0038 16D1     		bne	.L17
 306:Core/Src/main.c ****       RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 403              		.loc 1 306 3 is_stmt 1 view .LVU73
 306:Core/Src/main.c ****       RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 404              		.loc 1 306 31 is_stmt 0 view .LVU74
 405 003a 07A8     		add	r0, sp, #28
 406 003c 0723     		movs	r3, #7
 407 003e 0793     		str	r3, [sp, #28]
 308:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 408              		.loc 1 308 3 is_stmt 1 view .LVU75
 308:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 409              		.loc 1 308 34 is_stmt 0 view .LVU76
 410 0040 0023     		movs	r3, #0
 411 0042 4360     		str	r3, [r0, #4]
 309:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 412              		.loc 1 309 3 is_stmt 1 view .LVU77
 309:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 413              		.loc 1 309 35 is_stmt 0 view .LVU78
 414 0044 8360     		str	r3, [r0, #8]
 310:Core/Src/main.c **** 
 415              		.loc 1 310 3 is_stmt 1 view .LVU79
 310:Core/Src/main.c **** 
 416              		.loc 1 310 36 is_stmt 0 view .LVU80
 417 0046 C360     		str	r3, [r0, #12]
 312:Core/Src/main.c ****     Error_Handler();
 418              		.loc 1 312 3 is_stmt 1 view .LVU81
 312:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccFX5Ng8.s 			page 17


 419              		.loc 1 312 7 is_stmt 0 view .LVU82
 420 0048 0021     		movs	r1, #0
 421 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 422              	.LVL27:
 312:Core/Src/main.c ****     Error_Handler();
 423              		.loc 1 312 6 discriminator 1 view .LVU83
 424 004e 0028     		cmp	r0, #0
 425 0050 0CD1     		bne	.L18
 315:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 426              		.loc 1 315 3 is_stmt 1 view .LVU84
 315:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 427              		.loc 1 315 38 is_stmt 0 view .LVU85
 428 0052 01A8     		add	r0, sp, #4
 429 0054 0123     		movs	r3, #1
 430 0056 0193     		str	r3, [sp, #4]
 316:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 431              		.loc 1 316 3 is_stmt 1 view .LVU86
 316:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 432              		.loc 1 316 38 is_stmt 0 view .LVU87
 433 0058 0023     		movs	r3, #0
 434 005a 8360     		str	r3, [r0, #8]
 317:Core/Src/main.c ****     Error_Handler();
 435              		.loc 1 317 3 is_stmt 1 view .LVU88
 317:Core/Src/main.c ****     Error_Handler();
 436              		.loc 1 317 7 is_stmt 0 view .LVU89
 437 005c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 438              	.LVL28:
 317:Core/Src/main.c ****     Error_Handler();
 439              		.loc 1 317 6 discriminator 1 view .LVU90
 440 0060 0028     		cmp	r0, #0
 441 0062 05D1     		bne	.L19
 320:Core/Src/main.c **** 
 442              		.loc 1 320 1 view .LVU91
 443 0064 18B0     		add	sp, sp, #96
 444              		@ sp needed
 445 0066 10BD     		pop	{r4, pc}
 446              	.L17:
 301:Core/Src/main.c ****   }
 447              		.loc 1 301 5 is_stmt 1 view .LVU92
 448 0068 FFF7FEFF 		bl	Error_Handler
 449              	.LVL29:
 450              	.L18:
 313:Core/Src/main.c ****   }
 451              		.loc 1 313 5 view .LVU93
 452 006c FFF7FEFF 		bl	Error_Handler
 453              	.LVL30:
 454              	.L19:
 318:Core/Src/main.c ****   }
 455              		.loc 1 318 5 view .LVU94
 456 0070 FFF7FEFF 		bl	Error_Handler
 457              	.LVL31:
 458              		.cfi_endproc
 459              	.LFE48:
 461              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 462              		.align	2
 463              	.LC5:
 464 0000 25692025 		.ascii	"%i %i %i\012\015\000"
ARM GAS  /tmp/ccFX5Ng8.s 			page 18


 464      69202569 
 464      0A0D00
 465              		.section	.text.main,"ax",%progbits
 466              		.align	1
 467              		.global	main
 468              		.syntax unified
 469              		.code	16
 470              		.thumb_func
 472              	main:
 473              	.LFB47:
 213:Core/Src/main.c **** 
 474              		.loc 1 213 16 view -0
 475              		.cfi_startproc
 476              		@ Volatile: function does not return.
 477              		@ args = 0, pretend = 0, frame = 64
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479 0000 10B5     		push	{r4, lr}
 480              	.LCFI10:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 4, -8
 483              		.cfi_offset 14, -4
 484 0002 92B0     		sub	sp, sp, #72
 485              	.LCFI11:
 486              		.cfi_def_cfa_offset 80
 223:Core/Src/main.c **** 
 487              		.loc 1 223 3 view .LVU96
 488 0004 FFF7FEFF 		bl	HAL_Init
 489              	.LVL32:
 230:Core/Src/main.c **** 
 490              		.loc 1 230 3 view .LVU97
 491 0008 FFF7FEFF 		bl	SystemClock_Config
 492              	.LVL33:
 237:Core/Src/main.c ****   MX_USART1_UART_Init();
 493              		.loc 1 237 3 view .LVU98
 494 000c FFF7FEFF 		bl	MX_GPIO_Init
 495              	.LVL34:
 238:Core/Src/main.c ****   MX_SPI1_Init();
 496              		.loc 1 238 3 view .LVU99
 497 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 498              	.LVL35:
 239:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 499              		.loc 1 239 3 view .LVU100
 500 0014 FFF7FEFF 		bl	MX_SPI1_Init
 501              	.LVL36:
 248:Core/Src/main.c **** 
 502              		.loc 1 248 3 view .LVU101
 251:Core/Src/main.c ****   uint8_t txData;
 503              		.loc 1 251 3 view .LVU102
 252:Core/Src/main.c ****   uint8_t rxData;
 504              		.loc 1 252 3 view .LVU103
 253:Core/Src/main.c **** 
 505              		.loc 1 253 3 view .LVU104
 255:Core/Src/main.c ****   lsm6_init();
 506              		.loc 1 255 3 view .LVU105
 256:Core/Src/main.c **** 
 507              		.loc 1 256 3 view .LVU106
 508 0018 FFF7FEFF 		bl	lsm6_init
ARM GAS  /tmp/ccFX5Ng8.s 			page 19


 509              	.LVL37:
 510              	.L21:
 258:Core/Src/main.c **** 
 511              		.loc 1 258 3 view .LVU107
 260:Core/Src/main.c **** 
 512              		.loc 1 260 3 view .LVU108
 266:Core/Src/main.c **** 
 513              		.loc 1 266 5 view .LVU109
 514 001c 03AC     		add	r4, sp, #12
 515 001e 2000     		movs	r0, r4
 516 0020 FFF7FEFF 		bl	lsm6_readGyro_RAW
 517              	.LVL38:
 270:Core/Src/main.c **** 
 518              		.loc 1 270 5 view .LVU110
 270:Core/Src/main.c **** 
 519              		.loc 1 270 72 is_stmt 0 view .LVU111
 520 0024 0022     		movs	r2, #0
 521 0026 A35E     		ldrsh	r3, [r4, r2]
 270:Core/Src/main.c **** 
 522              		.loc 1 270 84 view .LVU112
 523 0028 0222     		movs	r2, #2
 524 002a A15E     		ldrsh	r1, [r4, r2]
 270:Core/Src/main.c **** 
 525              		.loc 1 270 96 view .LVU113
 526 002c 0422     		movs	r2, #4
 527 002e A05E     		ldrsh	r0, [r4, r2]
 270:Core/Src/main.c **** 
 528              		.loc 1 270 5 view .LVU114
 529 0030 0C4A     		ldr	r2, .L22
 530 0032 05AC     		add	r4, sp, #20
 531 0034 0190     		str	r0, [sp, #4]
 532 0036 0091     		str	r1, [sp]
 533 0038 3221     		movs	r1, #50
 534 003a 2000     		movs	r0, r4
 535 003c FFF7FEFF 		bl	snprintf
 536              	.LVL39:
 272:Core/Src/main.c **** 
 537              		.loc 1 272 5 is_stmt 1 view .LVU115
 272:Core/Src/main.c **** 
 538              		.loc 1 272 52 is_stmt 0 view .LVU116
 539 0040 2000     		movs	r0, r4
 540 0042 FFF7FEFF 		bl	strlen
 541              	.LVL40:
 272:Core/Src/main.c **** 
 542              		.loc 1 272 5 discriminator 1 view .LVU117
 543 0046 82B2     		uxth	r2, r0
 544 0048 0748     		ldr	r0, .L22+4
 545 004a C823     		movs	r3, #200
 546 004c 2100     		movs	r1, r4
 547 004e FFF7FEFF 		bl	HAL_UART_Transmit
 548              	.LVL41:
 274:Core/Src/main.c **** 
 549              		.loc 1 274 5 is_stmt 1 view .LVU118
 550 0052 0821     		movs	r1, #8
 551 0054 0548     		ldr	r0, .L22+8
 552 0056 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 553              	.LVL42:
ARM GAS  /tmp/ccFX5Ng8.s 			page 20


 276:Core/Src/main.c ****     /* USER CODE END WHILE */
 554              		.loc 1 276 5 discriminator 1 view .LVU119
 555 005a 6420     		movs	r0, #100
 556 005c FFF7FEFF 		bl	HAL_Delay
 557              	.LVL43:
 260:Core/Src/main.c **** 
 558              		.loc 1 260 9 view .LVU120
 559 0060 DCE7     		b	.L21
 560              	.L23:
 561 0062 C046     		.align	2
 562              	.L22:
 563 0064 00000000 		.word	.LC5
 564 0068 00000000 		.word	huart1
 565 006c 00040048 		.word	1207960576
 566              		.cfi_endproc
 567              	.LFE47:
 569              		.section	.rodata
 570              		.align	2
 571              		.set	.LANCHOR0,. + 0
 572              	.LC2:
 573 0000 A200A300 		.ascii	"\242\000\243\000\244\000\245\000\246\000\247\000"
 573      A400A500 
 573      A600A700 
 574              		.text
 575              	.Letext0:
 576              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 577              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 578              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 579              		.file 6 "/usr/lib/gcc/arm-none-eabi/14.1.0/include/stddef.h"
 580              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 581              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 582              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 583              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 584              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 585              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 586              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 587              		.file 14 "Core/Inc/spi.h"
 588              		.file 15 "Core/Inc/usart.h"
 589              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 590              		.file 17 "/usr/arm-none-eabi/include/string.h"
 591              		.file 18 "/usr/arm-none-eabi/include/stdio.h"
 592              		.file 19 "Core/Inc/gpio.h"
 593              		.file 20 "<built-in>"
ARM GAS  /tmp/ccFX5Ng8.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccFX5Ng8.s:19     .text.lsm6_read:00000000 $t
     /tmp/ccFX5Ng8.s:25     .text.lsm6_read:00000000 lsm6_read
     /tmp/ccFX5Ng8.s:101    .text.lsm6_read:00000048 $d
     /tmp/ccFX5Ng8.s:107    .text.lsm6_write:00000000 $t
     /tmp/ccFX5Ng8.s:113    .text.lsm6_write:00000000 lsm6_write
     /tmp/ccFX5Ng8.s:172    .text.lsm6_write:00000034 $d
     /tmp/ccFX5Ng8.s:178    .text.lsm6_init:00000000 $t
     /tmp/ccFX5Ng8.s:184    .text.lsm6_init:00000000 lsm6_init
     /tmp/ccFX5Ng8.s:230    .text.lsm6_readGyro_RAW:00000000 $t
     /tmp/ccFX5Ng8.s:236    .text.lsm6_readGyro_RAW:00000000 lsm6_readGyro_RAW
     /tmp/ccFX5Ng8.s:295    .text.lsm6_readGyro_RAW:0000003c $d
     /tmp/ccFX5Ng8.s:302    .text.Error_Handler:00000000 $t
     /tmp/ccFX5Ng8.s:308    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccFX5Ng8.s:340    .text.SystemClock_Config:00000000 $t
     /tmp/ccFX5Ng8.s:346    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccFX5Ng8.s:462    .rodata.main.str1.4:00000000 $d
     /tmp/ccFX5Ng8.s:466    .text.main:00000000 $t
     /tmp/ccFX5Ng8.s:472    .text.main:00000000 main
     /tmp/ccFX5Ng8.s:563    .text.main:00000064 $d
     /tmp/ccFX5Ng8.s:570    .rodata:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_SPI_TransmitReceive
hspi1
HAL_SPI_Transmit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_SPI1_Init
snprintf
strlen
HAL_UART_Transmit
HAL_GPIO_TogglePin
HAL_Delay
huart1
